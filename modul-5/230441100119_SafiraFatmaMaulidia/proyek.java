/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package manajemen_proyek;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.HashMap;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author Safira
 */
public class proyek extends javax.swing.JFrame {

    /**
     * Creates new form proyek
     */
    public proyek() {
        initComponents();
        loadKaryawanComboBox();
        loadProyekComboBox();
        loadDataTransaksi();
    }

    private void loadComboBoxes() {
        cmb_karyawan.removeAllItems();
        cmb_proyek.removeAllItems();
        
        try (Connection conn = koneksi.getConnection()) {
            String sqlKaryawan = "SELECT nama FROM karyawan";
            PreparedStatement pstmtKaryawan = conn.prepareStatement(sqlKaryawan);
            ResultSet rsKaryawan = pstmtKaryawan.executeQuery();
            while (rsKaryawan.next()) {
                cmb_karyawan.addItem(rsKaryawan.getString("nama"));
            }

            String sqlProyek = "SELECT nama_proyek FROM proyek";
            PreparedStatement pstmtProyek = conn.prepareStatement(sqlProyek);
            ResultSet rsProyek = pstmtProyek.executeQuery();
            while (rsProyek.next()) {
                cmb_proyek.addItem(rsProyek.getString("nama_proyek"));
            }

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Gagal memuat data ComboBox: " + e.getMessage());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel4 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        tambah_karyawan = new javax.swing.JButton();
        delete_karyawan = new javax.swing.JButton();
        update_karyawan = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabel_karyawan = new javax.swing.JTable();
        jPanel10 = new javax.swing.JPanel();
        departemen = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        id = new javax.swing.JTextField();
        nama = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jabatan = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        tambah_proyek = new javax.swing.JButton();
        delete_proyek = new javax.swing.JButton();
        update_proyek = new javax.swing.JButton();
        jPanel13 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        id_proyek = new javax.swing.JTextField();
        nama_proyek = new javax.swing.JTextField();
        durasi_pengerjaan = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabel_proyek = new javax.swing.JTable();
        jPanel6 = new javax.swing.JPanel();
        jPanel9 = new javax.swing.JPanel();
        tambah_transaksi = new javax.swing.JButton();
        delete_transaksi = new javax.swing.JButton();
        update_transaksi = new javax.swing.JButton();
        jPanel14 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        peran_transaksi = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        cmb_karyawan = new javax.swing.JComboBox<>();
        cmb_proyek = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        id_transaksi = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        tabel_transaksi = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setLayout(new java.awt.BorderLayout());

        jPanel2.setBackground(new java.awt.Color(102, 102, 102));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("MANAJEMEN PROYEK");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(323, 323, 323)
                .addComponent(jLabel2)
                .addContainerGap(337, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(46, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(38, 38, 38))
        );

        jPanel1.add(jPanel2, java.awt.BorderLayout.PAGE_START);

        jPanel3.setBackground(new java.awt.Color(102, 102, 102));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTabbedPane1.setTabPlacement(javax.swing.JTabbedPane.LEFT);

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));

        jPanel7.setLayout(new java.awt.GridBagLayout());

        tambah_karyawan.setText("tambah");
        tambah_karyawan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tambah_karyawanActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.ipadx = 25;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 13);
        jPanel7.add(tambah_karyawan, gridBagConstraints);

        delete_karyawan.setText("delete");
        delete_karyawan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delete_karyawanActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.ipadx = 25;
        gridBagConstraints.insets = new java.awt.Insets(11, 0, 0, 0);
        jPanel7.add(delete_karyawan, gridBagConstraints);

        update_karyawan.setText("update");
        update_karyawan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                update_karyawanActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.ipadx = 25;
        gridBagConstraints.insets = new java.awt.Insets(0, 12, 0, 1);
        jPanel7.add(update_karyawan, gridBagConstraints);

        tabel_karyawan.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ID", "Nama", "Jabatan", "Departemen"
            }
        ));
        tabel_karyawan.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabel_karyawanMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabel_karyawan);

        jPanel10.setBackground(new java.awt.Color(255, 255, 255));

        jLabel3.setText("Harap mengisi data dengan benar!");

        jLabel4.setText("ID:");

        jLabel7.setText("Nama:");

        jLabel8.setText("Jabatan:");

        jLabel1.setText("Departemen:");

        jabatan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jabatanActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8)
                            .addComponent(jLabel1))
                        .addGap(64, 64, 64)
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(id)
                            .addComponent(nama)
                            .addComponent(jabatan)
                            .addComponent(departemen, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel3)
                        .addGap(47, 47, 47)))
                .addContainerGap(31, Short.MAX_VALUE))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
                .addContainerGap(24, Short.MAX_VALUE)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(nama, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jabatan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(departemen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addComponent(jLabel3)
                .addGap(28, 28, 28))
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, 338, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(38, 38, 38)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 353, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 809, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 444, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(51, 51, 51)
                        .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(49, 49, 49)
                        .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(121, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("karyawan", jPanel4);

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));

        jPanel8.setLayout(new java.awt.GridBagLayout());

        tambah_proyek.setText("tambah");
        tambah_proyek.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tambah_proyekActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.ipadx = 25;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 13);
        jPanel8.add(tambah_proyek, gridBagConstraints);

        delete_proyek.setText("delete");
        delete_proyek.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delete_proyekActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.ipadx = 25;
        gridBagConstraints.insets = new java.awt.Insets(11, 0, 0, 0);
        jPanel8.add(delete_proyek, gridBagConstraints);

        update_proyek.setText("update");
        update_proyek.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                update_proyekActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.ipadx = 25;
        gridBagConstraints.insets = new java.awt.Insets(0, 12, 0, 1);
        jPanel8.add(update_proyek, gridBagConstraints);

        jPanel13.setBackground(new java.awt.Color(255, 255, 255));

        jLabel5.setText("ID:");

        jLabel9.setText("Nama proyek:");

        jLabel10.setText("Durasi pengerjaan:");

        nama_proyek.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nama_proyekActionPerformed(evt);
            }
        });

        durasi_pengerjaan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                durasi_pengerjaanActionPerformed(evt);
            }
        });

        jLabel11.setText("Harap mengisi data dengan benar!");

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(jLabel9)
                    .addComponent(jLabel10))
                .addGap(64, 64, 64)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(id_proyek, javax.swing.GroupLayout.DEFAULT_SIZE, 167, Short.MAX_VALUE)
                    .addComponent(nama_proyek)
                    .addComponent(durasi_pengerjaan))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel13Layout.createSequentialGroup()
                .addContainerGap(93, Short.MAX_VALUE)
                .addComponent(jLabel11)
                .addGap(86, 86, 86))
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(id_proyek, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(nama_proyek, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(durasi_pengerjaan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(71, 71, 71)
                .addComponent(jLabel11)
                .addContainerGap(34, Short.MAX_VALUE))
        );

        tabel_proyek.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "ID", "Nama proyek", "Durasi pengerjaan"
            }
        ));
        tabel_proyek.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabel_proyekMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tabel_proyek);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, 338, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(30, 30, 30)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 371, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 807, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(55, 55, 55)
                        .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 444, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 116, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("proyek", jPanel5);

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));

        jPanel9.setLayout(new java.awt.GridBagLayout());

        tambah_transaksi.setText("tambah");
        tambah_transaksi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tambah_transaksiActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.ipadx = 25;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 13);
        jPanel9.add(tambah_transaksi, gridBagConstraints);

        delete_transaksi.setText("delete");
        delete_transaksi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delete_transaksiActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.ipadx = 25;
        gridBagConstraints.insets = new java.awt.Insets(11, 0, 0, 0);
        jPanel9.add(delete_transaksi, gridBagConstraints);

        update_transaksi.setText("update");
        update_transaksi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                update_transaksiActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.ipadx = 25;
        gridBagConstraints.insets = new java.awt.Insets(0, 12, 0, 1);
        jPanel9.add(update_transaksi, gridBagConstraints);

        jPanel14.setBackground(new java.awt.Color(255, 255, 255));

        jLabel13.setText("Karyawan:");

        jLabel14.setText("Proyek:");

        jLabel15.setText("Peran:");

        peran_transaksi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                peran_transaksiActionPerformed(evt);
            }
        });

        jLabel17.setText("Harap mengisi data dengan benar!");

        cmb_karyawan.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        cmb_proyek.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel6.setText("ID Transaksi:");

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel14Layout.createSequentialGroup()
                .addContainerGap(93, Short.MAX_VALUE)
                .addComponent(jLabel17)
                .addGap(86, 86, 86))
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel14)
                    .addComponent(jLabel15)
                    .addComponent(jLabel13)
                    .addComponent(jLabel6))
                .addGap(69, 69, 69)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(peran_transaksi, javax.swing.GroupLayout.DEFAULT_SIZE, 167, Short.MAX_VALUE)
                    .addComponent(cmb_karyawan, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cmb_proyek, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(id_transaksi))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(id_transaksi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(13, 13, 13)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(cmb_karyawan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmb_proyek, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(peran_transaksi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(51, 51, 51)
                .addComponent(jLabel17)
                .addContainerGap(34, Short.MAX_VALUE))
        );

        tabel_transaksi.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ID Transaksi", "Karyawan", "Proyek", "Peran"
            }
        ));
        tabel_transaksi.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabel_transaksiMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tabel_transaksi);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(jPanel14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, 338, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 371, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 809, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 444, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(64, 64, 64)
                        .addComponent(jPanel14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(46, 46, 46)
                        .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(0, 121, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("transaksi proyek", jPanel6);

        jPanel3.add(jTabbedPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, 580));

        jPanel1.add(jPanel3, java.awt.BorderLayout.CENTER);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 910, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jabatanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jabatanActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jabatanActionPerformed

    private void durasi_pengerjaanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_durasi_pengerjaanActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_durasi_pengerjaanActionPerformed

    private void nama_proyekActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nama_proyekActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nama_proyekActionPerformed

    private void peran_transaksiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_peran_transaksiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_peran_transaksiActionPerformed

    private void tambah_karyawanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tambah_karyawanActionPerformed
    tambahKaryawan();
    }//GEN-LAST:event_tambah_karyawanActionPerformed

    private void update_karyawanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_update_karyawanActionPerformed
    updateKaryawan();
    }//GEN-LAST:event_update_karyawanActionPerformed

    private void delete_karyawanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delete_karyawanActionPerformed
    deleteKaryawan();
    }//GEN-LAST:event_delete_karyawanActionPerformed

    private void tambah_proyekActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tambah_proyekActionPerformed
    tambahProyek();
    }//GEN-LAST:event_tambah_proyekActionPerformed

    private void delete_proyekActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delete_proyekActionPerformed
    deleteProyek();
    }//GEN-LAST:event_delete_proyekActionPerformed

    private void update_proyekActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_update_proyekActionPerformed
    updateProyek();
    }//GEN-LAST:event_update_proyekActionPerformed

    private void tambah_transaksiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tambah_transaksiActionPerformed
    tambahTransaksi();
    }//GEN-LAST:event_tambah_transaksiActionPerformed

    private void delete_transaksiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delete_transaksiActionPerformed
    deleteTransaksi();
    }//GEN-LAST:event_delete_transaksiActionPerformed

    private void update_transaksiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_update_transaksiActionPerformed
    updateTransaksi();
    }//GEN-LAST:event_update_transaksiActionPerformed

    private void tabel_karyawanMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabel_karyawanMouseClicked
     int row = tabel_karyawan.getSelectedRow();
        
        if (row != -1) {
            String idValue = tabel_karyawan.getValueAt(row, 0).toString();
            String namaValue = tabel_karyawan.getValueAt(row, 1).toString();
            String jabatanValue = tabel_karyawan.getValueAt(row, 2).toString();
            String departemenValue = tabel_karyawan.getValueAt(row, 3).toString();

            id.setText(idValue);
            nama.setText(namaValue);
            jabatan.setText(jabatanValue);
            departemen.setText(departemenValue);
        }
    }//GEN-LAST:event_tabel_karyawanMouseClicked

    private void tabel_proyekMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabel_proyekMouseClicked
    int row = tabel_proyek.getSelectedRow();
        
        if (row != -1) { 
            String idValue = tabel_proyek.getValueAt(row, 0).toString();
            String namaProyekValue = tabel_proyek.getValueAt(row, 1).toString();
            String durasiPengerjaanValue = tabel_proyek.getValueAt(row, 2).toString();

            id_proyek.setText(idValue);
            nama_proyek.setText(namaProyekValue);
            durasi_pengerjaan.setText(durasiPengerjaanValue);
        }
    }//GEN-LAST:event_tabel_proyekMouseClicked

    private void tabel_transaksiMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabel_transaksiMouseClicked
    int row = tabel_transaksi.getSelectedRow();
        
        if (row != -1) { 
            String idTransaksiValue = tabel_transaksi.getValueAt(row, 0).toString();
            String namaKaryawanValue = tabel_transaksi.getValueAt(row, 1).toString();
            String namaProyekValue = tabel_transaksi.getValueAt(row, 2).toString();
            String peranValue = tabel_transaksi.getValueAt(row, 3).toString();

            id_transaksi.setText(idTransaksiValue);
            cmb_karyawan.setSelectedItem(namaKaryawanValue);
            cmb_proyek.setSelectedItem(namaProyekValue);
            peran_transaksi.setText(peranValue);
        }
    }//GEN-LAST:event_tabel_transaksiMouseClicked
// tab karyawan
    private void loadDataKaryawan() {
        String sql = "SELECT * FROM karyawan";
        DefaultTableModel model = (DefaultTableModel) tabel_karyawan.getModel();
        model.setRowCount(0);

        try (Connection conn = koneksi.getConnection();
             PreparedStatement pstmt = conn.prepareStatement(sql);
             ResultSet rs = pstmt.executeQuery()) {

            while (rs.next()) {
                Object[] row = {
                    rs.getInt("id"),
                    rs.getString("nama"),
                    rs.getString("jabatan"),
                    rs.getString("departemen")
                };
                model.addRow(row);
            }

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Gagal memuat data karyawan: " + e.getMessage());
        }
    }

    private void loadDataProyek() {
        String sql = "SELECT * FROM proyek";
        DefaultTableModel model = (DefaultTableModel) tabel_proyek.getModel();
        model.setRowCount(0);

        try (Connection conn = koneksi.getConnection();
             PreparedStatement pstmt = conn.prepareStatement(sql);
             ResultSet rs = pstmt.executeQuery()) {

            while (rs.next()) {
                Object[] row = {
                    rs.getInt("id"),
                    rs.getString("nama_proyek"),
                    rs.getInt("durasi_pengerjaan")
                };
                model.addRow(row);
            }

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Gagal memuat data proyek: " + e.getMessage());
        }
    }

    private void tambahKaryawan() {
    String idKaryawan = id.getText();
    String namaKaryawan = nama.getText();
    String jabatanKaryawan = jabatan.getText();
    String departemenKaryawan = departemen.getText();

    String sql = "INSERT INTO karyawan (id, nama, jabatan, departemen) VALUES (?, ?, ?, ?)";

    try (Connection conn = koneksi.getConnection();
         PreparedStatement pstmt = conn.prepareStatement(sql)) {

        pstmt.setInt(1, Integer.parseInt(idKaryawan));
        pstmt.setString(2, namaKaryawan);
        pstmt.setString(3, jabatanKaryawan);
        pstmt.setString(4, departemenKaryawan);

        pstmt.executeUpdate();
        JOptionPane.showMessageDialog(this, "Karyawan berhasil ditambahkan!");
        
        loadDataKaryawan();      // Muat ulang tabel karyawan
        loadKaryawanComboBox();  // Muat ulang ComboBox karyawan
        
        // Kosongkan text fields setelah data ditambahkan
        id.setText("");
        nama.setText("");
        jabatan.setText("");
        departemen.setText("");

    } catch (SQLException e) {
        JOptionPane.showMessageDialog(this, "Gagal menambahkan karyawan: " + e.getMessage());
    }
}

    private void updateKaryawan() {
        String idKaryawan = id.getText();
        String namaKaryawan = nama.getText();
        String jabatanKaryawan = jabatan.getText();
        String departemenKaryawan = departemen.getText();

        String sql = "UPDATE karyawan SET nama = ?, jabatan = ?, departemen = ? WHERE id = ?";

        try (Connection conn = koneksi.getConnection();
             PreparedStatement pstmt = conn.prepareStatement(sql)) {

            pstmt.setString(1, namaKaryawan);
            pstmt.setString(2, jabatanKaryawan);
            pstmt.setString(3, departemenKaryawan);
            pstmt.setInt(4, Integer.parseInt(idKaryawan));

            pstmt.executeUpdate();
            JOptionPane.showMessageDialog(this, "Karyawan berhasil diupdate!");
            loadDataKaryawan();

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Gagal mengupdate karyawan: " + e.getMessage());
        }
    }

    private void deleteKaryawan() {
        String idKaryawan = id.getText();

        String sql = "DELETE FROM karyawan WHERE id = ?";

        try (Connection conn = koneksi.getConnection();
             PreparedStatement pstmt = conn.prepareStatement(sql)) {

            pstmt.setInt(1, Integer.parseInt(idKaryawan));

            pstmt.executeUpdate();
            JOptionPane.showMessageDialog(this, "Karyawan berhasil dihapus!");
            loadDataKaryawan();

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Gagal menghapus karyawan: " + e.getMessage());
        }
    }
    
    

    
    
    
    
    
    
// tab proyek    
private void tambahProyek() {
    String idProyek = id_proyek.getText();
    String namaProyek = nama_proyek.getText();
    String durasiPengerjaan = durasi_pengerjaan.getText();

    String sql = "INSERT INTO proyek (id, nama_proyek, durasi_pengerjaan) VALUES (?, ?, ?)";

    try (Connection conn = koneksi.getConnection();
         PreparedStatement pstmt = conn.prepareStatement(sql)) {

        pstmt.setInt(1, Integer.parseInt(idProyek));
        pstmt.setString(2, namaProyek);
        pstmt.setInt(3, Integer.parseInt(durasiPengerjaan));

        pstmt.executeUpdate();
        JOptionPane.showMessageDialog(this, "Proyek berhasil ditambahkan!");
        
        loadDataProyek();       // Muat ulang tabel proyek
        loadProyekComboBox();   // Muat ulang ComboBox proyek
        
        // Kosongkan text fields setelah data ditambahkan
        id_proyek.setText("");
        nama_proyek.setText("");
        durasi_pengerjaan.setText("");

    } catch (SQLException e) {
        JOptionPane.showMessageDialog(this, "Gagal menambahkan proyek: " + e.getMessage());
    }
}

    private void updateProyek() {
        String idProyek = id_proyek.getText();
        String namaProyek = nama_proyek.getText();
        String durasiPengerjaan = durasi_pengerjaan.getText();

        String sql = "UPDATE proyek SET nama_proyek = ?, durasi_pengerjaan = ? WHERE id = ?";

        try (Connection conn = koneksi.getConnection();
             PreparedStatement pstmt = conn.prepareStatement(sql)) {

            pstmt.setString(1, namaProyek);
            pstmt.setInt(2, Integer.parseInt(durasiPengerjaan));
            pstmt.setInt(3, Integer.parseInt(idProyek));

            pstmt.executeUpdate();
            JOptionPane.showMessageDialog(this, "Proyek berhasil diupdate!");
            loadDataProyek();

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Gagal mengupdate proyek: " + e.getMessage());
        }
    }

    private void deleteProyek() {
        String idProyek = id_proyek.getText();

        String sql = "DELETE FROM proyek WHERE id = ?";

        try (Connection conn = koneksi.getConnection();
             PreparedStatement pstmt = conn.prepareStatement(sql)) {

            pstmt.setInt(1, Integer.parseInt(idProyek));

            pstmt.executeUpdate();
            JOptionPane.showMessageDialog(this, "Proyek berhasil dihapus!");
            loadDataProyek();

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Gagal menghapus proyek: " + e.getMessage());
        }
    }


    
    
      
    
    
// tab transaksi
private HashMap<String, Integer> karyawanMap = new HashMap<>();
private HashMap<String, Integer> proyekMap = new HashMap<>();

private void loadKaryawanComboBox() {
    String sql = "SELECT id, nama FROM karyawan";
    cmb_karyawan.removeAllItems();
    karyawanMap.clear();

    try (Connection conn = koneksi.getConnection();
         PreparedStatement pstmt = conn.prepareStatement(sql);
         ResultSet rs = pstmt.executeQuery()) {

        while (rs.next()) {
            int id = rs.getInt("id");
            String nama = rs.getString("nama");
            karyawanMap.put(nama, id);  
            cmb_karyawan.addItem(nama); 
        }

    } catch (SQLException e) {
        JOptionPane.showMessageDialog(this, "Gagal memuat data karyawan ke ComboBox: " + e.getMessage());
    }
}

private void loadProyekComboBox() {
    String sql = "SELECT id, nama_proyek FROM proyek";
    cmb_proyek.removeAllItems();
    proyekMap.clear();

    try (Connection conn = koneksi.getConnection();
         PreparedStatement pstmt = conn.prepareStatement(sql);
         ResultSet rs = pstmt.executeQuery()) {

        while (rs.next()) {
            int id = rs.getInt("id");
            String namaProyek = rs.getString("nama_proyek");
            proyekMap.put(namaProyek, id);  
            cmb_proyek.addItem(namaProyek); 
        }

    } catch (SQLException e) {
        JOptionPane.showMessageDialog(this, "Gagal memuat data proyek ke ComboBox: " + e.getMessage());
    }
}

private void tambahTransaksi() {
    String idTransaksi = id_transaksi.getText();
    String selectedKaryawan = cmb_karyawan.getSelectedItem() != null ? cmb_karyawan.getSelectedItem().toString() : null;
    String selectedProyek = cmb_proyek.getSelectedItem() != null ? cmb_proyek.getSelectedItem().toString() : null;
    String peran = peran_transaksi.getText();

    Integer idKaryawan = selectedKaryawan != null ? karyawanMap.get(selectedKaryawan) : null;
    Integer idProyek = selectedProyek != null ? proyekMap.get(selectedProyek) : null;

    if (idKaryawan == null || idProyek == null) {
        JOptionPane.showMessageDialog(this, "Pilih karyawan dan proyek yang valid!");
        return;
    }

    String sql = "INSERT INTO transaksi (id_transaksi, id_karyawan, id_proyek, peran) VALUES (?, ?, ?, ?)";

    try (Connection conn = koneksi.getConnection();
         PreparedStatement pstmt = conn.prepareStatement(sql)) {

        pstmt.setInt(1, Integer.parseInt(idTransaksi));
        pstmt.setInt(2, idKaryawan);    
        pstmt.setInt(3, idProyek);      
        pstmt.setString(4, peran);

        pstmt.executeUpdate();
        JOptionPane.showMessageDialog(this, "Transaksi berhasil ditambahkan!");
        loadDataTransaksi();

    } catch (SQLException e) {
        JOptionPane.showMessageDialog(this, "Gagal menambahkan transaksi: " + e.getMessage());
    }
}

private void loadDataTransaksi() {
    String sql = "SELECT t.id_transaksi, k.nama AS nama_karyawan, p.nama_proyek, t.peran " +
                 "FROM transaksi t " +
                 "JOIN karyawan k ON t.id_karyawan = k.id " +
                 "JOIN proyek p ON t.id_proyek = p.id";
                 
    DefaultTableModel model = (DefaultTableModel) tabel_transaksi.getModel();
    model.setRowCount(0); 

    try (Connection conn = koneksi.getConnection();
         PreparedStatement pstmt = conn.prepareStatement(sql);
         ResultSet rs = pstmt.executeQuery()) {
        while (rs.next()) {
            Object[] row = {
                rs.getInt("id_transaksi"),           
                rs.getString("nama_karyawan"),       
                rs.getString("nama_proyek"),         
                rs.getString("peran")                
            };
            model.addRow(row); 
        }

    } catch (SQLException e) {
        JOptionPane.showMessageDialog(this, "Gagal memuat data transaksi: " + e.getMessage());
    }
}

private void updateTransaksi() {
    String idTransaksi = id_transaksi.getText();
    String selectedKaryawan = cmb_karyawan.getSelectedItem() != null ? cmb_karyawan.getSelectedItem().toString() : null;
    String selectedProyek = cmb_proyek.getSelectedItem() != null ? cmb_proyek.getSelectedItem().toString() : null;
    String peran = peran_transaksi.getText();

    Integer idKaryawan = selectedKaryawan != null ? karyawanMap.get(selectedKaryawan) : null;
    Integer idProyek = selectedProyek != null ? proyekMap.get(selectedProyek) : null;

    if (idKaryawan == null || idProyek == null) {
        JOptionPane.showMessageDialog(this, "Pilih karyawan dan proyek yang valid!");
        return;
    }

    String sql = "UPDATE transaksi SET id_karyawan = ?, id_proyek = ?, peran = ? WHERE id_transaksi = ?";

    try (Connection conn = koneksi.getConnection();
         PreparedStatement pstmt = conn.prepareStatement(sql)) {

        pstmt.setInt(1, idKaryawan);
        pstmt.setInt(2, idProyek);
        pstmt.setString(3, peran);
        pstmt.setInt(4, Integer.parseInt(idTransaksi));

        pstmt.executeUpdate();
        JOptionPane.showMessageDialog(this, "Transaksi berhasil diupdate!");
        loadDataTransaksi();

    } catch (SQLException e) {
        JOptionPane.showMessageDialog(this, "Gagal mengupdate transaksi: " + e.getMessage());
    }
}

private void deleteTransaksi() {
    String idTransaksi = id_transaksi.getText();

    String sql = "DELETE FROM transaksi WHERE id_transaksi = ?";

    try (Connection conn = koneksi.getConnection();
         PreparedStatement pstmt = conn.prepareStatement(sql)) {

        pstmt.setInt(1, Integer.parseInt(idTransaksi));

        pstmt.executeUpdate();
        JOptionPane.showMessageDialog(this, "Transaksi berhasil dihapus!");
        loadDataTransaksi();

    } catch (SQLException e) {
        JOptionPane.showMessageDialog(this, "Gagal menghapus transaksi: " + e.getMessage());
    }
}






    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(proyek.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(proyek.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(proyek.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(proyek.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new proyek().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cmb_karyawan;
    private javax.swing.JComboBox<String> cmb_proyek;
    private javax.swing.JButton delete_karyawan;
    private javax.swing.JButton delete_proyek;
    private javax.swing.JButton delete_transaksi;
    private javax.swing.JTextField departemen;
    private javax.swing.JTextField durasi_pengerjaan;
    private javax.swing.JTextField id;
    private javax.swing.JTextField id_proyek;
    private javax.swing.JTextField id_transaksi;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField jabatan;
    private javax.swing.JTextField nama;
    private javax.swing.JTextField nama_proyek;
    private javax.swing.JTextField peran_transaksi;
    private javax.swing.JTable tabel_karyawan;
    private javax.swing.JTable tabel_proyek;
    private javax.swing.JTable tabel_transaksi;
    private javax.swing.JButton tambah_karyawan;
    private javax.swing.JButton tambah_proyek;
    private javax.swing.JButton tambah_transaksi;
    private javax.swing.JButton update_karyawan;
    private javax.swing.JButton update_proyek;
    private javax.swing.JButton update_transaksi;
    // End of variables declaration//GEN-END:variables
}
